# This file was auto-generated by the Firebase CLI
# https://github.com/firebase/firebase-tools

name: Deploy to Dev Env on merge

'on':
  pull_request:
    branches:
      - develop
    types: [closed]

jobs:
  build_and_deploy:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node: [12.x]

    steps:
      - uses: actions/checkout@v2

      - uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node }}
          check-latest: true

      - name: Create .env file
        run: echo '${{ secrets.ENV_DEV }}' > .env

      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo '::set-output name=dir::$(yarn cache dir)'

      - name: Cache node_modules
        uses: actions/cache@v2.1.4
        id: yarn-cache # use this to check for `cache-hit` (`steps.yarn-cache.outputs.cache-hit != 'true'`)
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - name: Install dependencies
        run: yarn install

      - name: Build this project
        run: yarn build

      - name: Deploy
        uses: FirebaseExtended/action-hosting-deploy@v0
        with:
          repoToken: '${{ secrets.GITHUB_TOKEN }}'
          firebaseServiceAccount: '${{ secrets.FIREBASE_SERVICE_ACCOUNT_LAB_ASSIGNMENT_DEV }}'
          channelId: live
          projectId: lab-assignment-dev

  deploy_to_functions:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [14.x]

    steps:
      - uses: actions/checkout@v2

      - name: Install npm packages
        run: |
          npm install -g firebase-tools
          cd functions
          npm install

      - name: Choose firebase project
        run: firebase use lab-assignment-dev

      - name: Deploy to Cloud Functions
        uses: w9jds/firebase-action@master
        with:
          args: deploy --only functions
        env:
          FIREBASE_TOKEN: ${{ secrets.FIREBASE_TOKEN }}

  delete_preview_env:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [12.x]

    steps:
      - uses: actions/checkout@v2

      - uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node }}

      - run: npm install -g firebase-tools

      - name: Choose firebase project
        run: firebase use dev --token ${{ secrets.FIREBASE_TOKEN }}

      - name: Delete preview
        run: firebase hosting:channel:delete ${{ github.event.number }} --token ${{ secrets.FIREBASE_TOKEN }} -f
